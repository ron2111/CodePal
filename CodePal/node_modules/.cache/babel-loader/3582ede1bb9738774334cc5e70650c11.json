{"ast":null,"code":"import _slicedToArray from\"C:/Users/91966/OneDrive/Desktop/rce-cg/realtime-code-editor/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from\"react\";// rafce: boilerplate command\nimport{v4 as uuidV4}from\"uuid\";// uuid package downloaded to generate a unique id\nimport toast from\"react-hot-toast\";// to show the room creation notification\nimport{useNavigate}from\"react-router-dom\";// for redirection\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Home=function Home(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),roomID=_useState2[0],setRoomID=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),username=_useState4[0],setUsername=_useState4[1];var navigate=useNavigate();// redirection\nvar createNewRoom=function createNewRoom(e){e.preventDefault();// to stop reloading of page when clicked on anchor tag\nvar id=uuidV4();setRoomID(id);toast.success(\"Created a new room\");// success for green tick\n};var joinRoom=function joinRoom(){if(!roomID||!username){toast.error(\"ROOM ID & USERNAME is required\");return;}// Redirect\nnavigate(\"/editor/\".concat(roomID),{state:{/* to access the username variable even in another state */username:username}});};var handleInputEnter=function handleInputEnter(e){// to join room even on pressing enter\nif(e.code===\"Enter\"){joinRoom();}};return/*#__PURE__*/_jsxs(\"div\",{className:\"homePageWrapper\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"formWrapper\",children:[/*#__PURE__*/_jsx(\"img\",{className:\"homePageLogo\",src:\"/code-pal.png\",alt:\"code-pal-logo\"}),/*#__PURE__*/_jsx(\"h4\",{className:\"mainLabel\",children:\"Paste invitation ROOM ID \"}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"inputBox\",placeholder:\"ROOM ID\",onChange:function onChange(e){return setRoomID(e.target.value);}// when we want to manually write the room id, then roomID variable is changed to that only\n,value:roomID// But, if we want to generate a new room automatically, then it can be done using the uuid funtion with useState Hook.\n,onKeyUp:handleInputEnter}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"inputBox\",placeholder:\"USERNAME\",onChange:function onChange(e){return setUsername(e.target.value);},value:username,onKeyUp:handleInputEnter}),/*#__PURE__*/_jsx(\"button\",{className:\"btn joinBtn\",onClick:joinRoom,children:\"Join\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"createInfo\",children:[\"If you don't have an invite then create \\xA0\",/*#__PURE__*/_jsx(\"a\",{onClick:createNewRoom,href:\"\",className:\"createNewBtn\",children:\"new room\"})]})]})]}),/*#__PURE__*/_jsx(\"footer\",{children:/*#__PURE__*/_jsxs(\"h4\",{children:[\"Built with \\uD83D\\uDC9B by \\xA0\",/*#__PURE__*/_jsx(\"a\",{href:\"https://github.com/ron2111\",target:\"/blank\",children:\"Rohan Sharma\"})]})})]});};export default Home;","map":{"version":3,"sources":["C:/Users/91966/OneDrive/Desktop/rce-cg/realtime-code-editor/src/pages/Home.js"],"names":["React","useState","v4","uuidV4","toast","useNavigate","Home","roomID","setRoomID","username","setUsername","navigate","createNewRoom","e","preventDefault","id","success","joinRoom","error","state","handleInputEnter","code","target","value"],"mappings":"iJAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CAAyC;AACzC,OAASC,EAAE,GAAIC,CAAAA,MAAf,KAA6B,MAA7B,CAAqC;AACrC,MAAOC,CAAAA,KAAP,KAAkB,iBAAlB,CAAqC;AACrC,OAASC,WAAT,KAA4B,kBAA5B,CAAgD;wFAEhD,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,EAAM,CACjB,cAA4BL,QAAQ,CAAC,EAAD,CAApC,wCAAOM,MAAP,eAAeC,SAAf,eACA,eAAgCP,QAAQ,CAAC,EAAD,CAAxC,yCAAOQ,QAAP,eAAiBC,WAAjB,eAEA,GAAMC,CAAAA,QAAQ,CAAGN,WAAW,EAA5B,CAAgC;AAEhC,GAAMO,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,CAAD,CAAO,CAC3BA,CAAC,CAACC,cAAF,GAAoB;AACpB,GAAMC,CAAAA,EAAE,CAAGZ,MAAM,EAAjB,CACAK,SAAS,CAACO,EAAD,CAAT,CACAX,KAAK,CAACY,OAAN,CAAc,oBAAd,EAAqC;AACtC,CALD,CAOA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CACrB,GAAI,CAACV,MAAD,EAAW,CAACE,QAAhB,CAA0B,CACxBL,KAAK,CAACc,KAAN,CAAY,gCAAZ,EACA,OACD,CAED;AACAP,QAAQ,mBAAYJ,MAAZ,EAAsB,CAC5BY,KAAK,CAAE,CACL,2DAA4DV,QAAQ,CAARA,QADvD,CADqB,CAAtB,CAAR,CAKD,CAZD,CAcA,GAAMW,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACP,CAAD,CAAO,CAC9B;AACA,GAAIA,CAAC,CAACQ,IAAF,GAAW,OAAf,CAAwB,CACtBJ,QAAQ,GACT,CACF,CALD,CAMA,mBACE,aAAK,SAAS,CAAC,iBAAf,wBACE,aAAK,SAAS,CAAC,aAAf,wBACE,YAAK,SAAS,CAAC,cAAf,CAA8B,GAAG,CAAC,eAAlC,CAAkD,GAAG,CAAC,eAAtD,EADF,cAEE,WAAI,SAAS,CAAC,WAAd,uCAFF,cAGE,aAAK,SAAS,CAAC,aAAf,wBACE,cACE,IAAI,CAAC,MADP,CAEE,SAAS,CAAC,UAFZ,CAGE,WAAW,CAAC,SAHd,CAIE,QAAQ,CAAE,kBAACJ,CAAD,QAAOL,CAAAA,SAAS,CAACK,CAAC,CAACS,MAAF,CAASC,KAAV,CAAhB,EAAkC;AAJ9C,CAKE,KAAK,CAAEhB,MACP;AANF,CAOE,OAAO,CAAEa,gBAPX,EADF,cAWE,cACE,IAAI,CAAC,MADP,CAEE,SAAS,CAAC,UAFZ,CAGE,WAAW,CAAC,UAHd,CAIE,QAAQ,CAAE,kBAACP,CAAD,QAAOH,CAAAA,WAAW,CAACG,CAAC,CAACS,MAAF,CAASC,KAAV,CAAlB,EAJZ,CAKE,KAAK,CAAEd,QALT,CAME,OAAO,CAAEW,gBANX,EAXF,cAoBE,eAAQ,SAAS,CAAC,aAAlB,CAAgC,OAAO,CAAEH,QAAzC,kBApBF,cAyBE,cAAM,SAAS,CAAC,YAAhB,uEAEE,UAAG,OAAO,CAAEL,aAAZ,CAA2B,IAAI,CAAC,EAAhC,CAAmC,SAAS,CAAC,cAA7C,sBAFF,GAzBF,GAHF,GADF,cAsCE,qCACE,qEAEE,UAAG,IAAI,CAAC,4BAAR,CAAqC,MAAM,CAAC,QAA5C,0BAFF,GADF,EAtCF,GADF,CAiDD,CAlFD,CAoFA,cAAeN,CAAAA,IAAf","sourcesContent":["import React, { useState } from \"react\"; // rafce: boilerplate command\r\nimport { v4 as uuidV4 } from \"uuid\"; // uuid package downloaded to generate a unique id\r\nimport toast from \"react-hot-toast\"; // to show the room creation notification\r\nimport { useNavigate } from \"react-router-dom\"; // for redirection\r\n\r\nconst Home = () => {\r\n  const [roomID, setRoomID] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n\r\n  const navigate = useNavigate(); // redirection\r\n\r\n  const createNewRoom = (e) => {\r\n    e.preventDefault(); // to stop reloading of page when clicked on anchor tag\r\n    const id = uuidV4();\r\n    setRoomID(id);\r\n    toast.success(\"Created a new room\"); // success for green tick\r\n  };\r\n\r\n  const joinRoom = () => {\r\n    if (!roomID || !username) {\r\n      toast.error(\"ROOM ID & USERNAME is required\");\r\n      return;\r\n    }\r\n\r\n    // Redirect\r\n    navigate(`/editor/${roomID}`, {\r\n      state: {\r\n        /* to access the username variable even in another state */ username,\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleInputEnter = (e) => {\r\n    // to join room even on pressing enter\r\n    if (e.code === \"Enter\") {\r\n      joinRoom();\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"homePageWrapper\">\r\n      <div className=\"formWrapper\">\r\n        <img className=\"homePageLogo\" src=\"/code-pal.png\" alt=\"code-pal-logo\" />\r\n        <h4 className=\"mainLabel\">Paste invitation ROOM ID </h4>\r\n        <div className=\"input-group\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"inputBox\"\r\n            placeholder=\"ROOM ID\"\r\n            onChange={(e) => setRoomID(e.target.value)} // when we want to manually write the room id, then roomID variable is changed to that only\r\n            value={roomID}\r\n            // But, if we want to generate a new room automatically, then it can be done using the uuid funtion with useState Hook.\r\n            onKeyUp={handleInputEnter}\r\n          />\r\n\r\n          <input\r\n            type=\"text\"\r\n            className=\"inputBox\"\r\n            placeholder=\"USERNAME\"\r\n            onChange={(e) => setUsername(e.target.value)}\r\n            value={username}\r\n            onKeyUp={handleInputEnter}\r\n          />\r\n\r\n          <button className=\"btn joinBtn\" onClick={joinRoom}>\r\n            Join\r\n          </button>\r\n          {/* Two classes given to this button, to keep a general styple and a specific for join button only */}\r\n\r\n          <span className=\"createInfo\">\r\n            If you don't have an invite then create &nbsp;\r\n            <a onClick={createNewRoom} href=\"\" className=\"createNewBtn\">\r\n              new room\r\n            </a>\r\n          </span>\r\n        </div>\r\n      </div>\r\n\r\n      <footer>\r\n        <h4>\r\n          Built with ðŸ’› by &nbsp;\r\n          <a href=\"https://github.com/ron2111\" target=\"/blank\">\r\n            Rohan Sharma\r\n          </a>\r\n        </h4>\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}